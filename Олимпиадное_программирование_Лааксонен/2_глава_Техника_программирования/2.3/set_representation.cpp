#include <iostream>
#include <bitset>
using namespace std;

int main() {
    //Представление множества [1, 3, 4, 8] в двоичном представлении
//    int x = (1<<1)|(1<<3)|(1<<4)|(1<<8);
//    cout << __builtin_popcount(x) << "\n";
//    for(int i = 0; i < 32; i++){
//        if(x&(1<<i)) cout << i << ' ';
//    }


//Операциии над множествами
//    int x = (1<<1)|(1<<3)|(1<<4)|(1<<8);
//    int y = (1<<3)|(1<<6)|(1<<8)|(1<<9);
//    int z = x|y; //Объединение
//    int с = x&y; //Пересечение
//    int a = ~x; //Дополнение
//    int b = x&(~y); //Разность

//Перебор подмножеств множества [0, 1, ..., n-1]
//for(int b = 0; b < (1 << n); b++){
// обработать подмножество b
//}

//Перебор подмножеств, содержащих k элементов
//for(int b = 0; b < (1 << n); b++){
//  if(__builtin_popcount(b) == k){
//      обработать подмножество b
//  }
//}

//Перебор всех подмножеств множества x
//int b = 0;
//do{
// обработать подмножество b
//} while(b=(b-x)&x);

//Битовые множенства
/*
bitset<10> s;
s[1] = 1;
s[3] = 1;
s[4] = 1;
s[7] = 1;
cout << s.count(); //count() - возвращает кол-во единичных битов

 К битовым множетствам также применимы побитовые операции
 bitset<10> a, b;
bitset<10> c = a&b;
bitset<10> d = a|b;
 */
}

